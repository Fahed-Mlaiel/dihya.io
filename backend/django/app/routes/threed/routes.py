"""
Dihya â€“ Django 3D API Routes Ultra AvancÃ©
-----------------------------------------
- Endpoints REST pour upload, conversion, visualisation, gestion et audit des assets 3D
- SÃ©curitÃ©, RBAC, logs, conformitÃ© RGPD/NIS2, multilingue, extensibilitÃ©
- PrÃªt pour CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution

ğŸ‡«ğŸ‡· Routes Django REST 3D (sÃ©curitÃ©, multilingue, souverainetÃ©)
ğŸ‡¬ğŸ‡§ Django REST 3D routes (security, multilingual, sovereignty)
ğŸ‡¦ğŸ‡ª Ù…Ø³Ø§Ø±Ø§Øª Django REST Ø«Ù„Ø§Ø«ÙŠØ© Ø§Ù„Ø£Ø¨Ø¹Ø§Ø¯ (Ø§Ù„Ø£Ù…Ø§Ù†ØŒ Ù…ØªØ¹Ø¯Ø¯ Ø§Ù„Ù„ØºØ§ØªØŒ Ø§Ù„Ø³ÙŠØ§Ø¯Ø©)
âµ£ Iwalen Django REST 3D (amatu, multilingual, sovereignty)
"""

from rest_framework import routers
from django.urls import path, include
from . import views

router = routers.DefaultRouter()
router.register(r'upload', views.Model3DUploadViewSet, basename='3d-upload')
router.register(r'convert', views.Model3DConvertViewSet, basename='3d-convert')
router.register(r'preview', views.Model3DPreviewViewSet, basename='3d-preview')
router.register(r'assets', views.Model3DAssetViewSet, basename='3d-assets')

urlpatterns = [
    path('', include(router.urls)),
]

# SÃ©curitÃ©â€¯: endpoints protÃ©gÃ©s JWT, RBAC, logs, audit, conformitÃ© RGPD/NIS2
# Multilingueâ€¯: tous les messages dâ€™erreur/succÃ¨s sont traduits (voir serializers.py)
# Extensibleâ€¯: ajoutez vos endpoints (analyse IA, gÃ©nÃ©ration, watermark, etc.)
# PrÃªt CI/CD, Codespaces, cloud souverain, production, dÃ©mo, contribution
